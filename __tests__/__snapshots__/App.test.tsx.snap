// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App /> renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaView
    onInsetsChange={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onOpen={[Function]}
          onTransitionStart={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 0.01,
                  "restSpeedThreshold": 0.01,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 0.01,
                  "restSpeedThreshold": 0.01,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                    Object {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      onLayout={[Function]}
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "flexBasis": 0,
                            "flexGrow": 1,
                            "flexShrink": 1,
                            "justifyContent": "center",
                            "paddingBottom": 0,
                            "paddingLeft": 20,
                            "paddingRight": 20,
                            "paddingTop": 0,
                          },
                        ]
                      }
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#8bc34a",
                              "fontSize": 30,
                              "fontWeight": "bold",
                              "marginBottom": 20,
                            },
                          ]
                        }
                      >
                        SIGNIN
                      </Text>
                      <View
                        style={
                          Object {
                            "borderBottomColor": "#8bc34a",
                            "borderBottomWidth": 0,
                            "height": 40,
                            "marginLeft": 10,
                            "marginRight": 10,
                            "marginTop": 10,
                            "width": "100%",
                          }
                        }
                      >
                        <TextInput
                          allowFontScaling={true}
                          autoCapitalize="none"
                          autoCompleteType="email"
                          keyboardType="email-address"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="E-mail"
                          rejectResponderTermination={true}
                          style={
                            Array [
                              Object {
                                "backgroundColor": "#e7e7e7",
                                "fontSize": 18,
                                "height": "100%",
                                "textAlign": "center",
                                "width": "100%",
                              },
                            ]
                          }
                          underlineColorAndroid="transparent"
                          value=""
                        />
                      </View>
                      <View
                        style={
                          Object {
                            "borderBottomColor": "#8bc34a",
                            "borderBottomWidth": 0,
                            "height": 40,
                            "marginLeft": 10,
                            "marginRight": 10,
                            "marginTop": 10,
                            "width": "100%",
                          }
                        }
                      >
                        <TextInput
                          allowFontScaling={true}
                          autoCapitalize="none"
                          autoCompleteType="password"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Password"
                          rejectResponderTermination={true}
                          secureTextEntry={true}
                          style={
                            Array [
                              Object {
                                "backgroundColor": "#e7e7e7",
                                "fontSize": 18,
                                "height": "100%",
                                "textAlign": "center",
                                "width": "100%",
                              },
                            ]
                          }
                          underlineColorAndroid="transparent"
                          value=""
                        />
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        isTVSelectable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "backgroundColor": "#8bc34a",
                            "height": 40,
                            "marginTop": 30,
                            "opacity": 1,
                            "width": 120,
                          }
                        }
                      >
                        <Text
                          style={
                            Array [
                              Object {
                                "color": "#fff",
                                "fontSize": 20,
                                "lineHeight": 40,
                                "textAlign": "center",
                              },
                            ]
                          }
                        >
                          Signin
                        </Text>
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        isTVSelectable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "marginTop": 30,
                            "opacity": 1,
                          }
                        }
                      >
                        <Text
                          style={
                            Array [
                              Object {
                                "color": "#8bc34a",
                                "fontSize": 16,
                                "textDecorationColor": "black",
                                "textDecorationLine": "underline",
                                "textDecorationStyle": "solid",
                              },
                            ]
                          }
                        >
                          Não tem cadastro?
                        </Text>
                      </View>
                      <ActivityIndicator
                        animating={true}
                        color="#999999"
                        hidesWhenStopped={true}
                        size="large"
                        style={
                          Object {
                            "marginTop": 15,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      pointerEvents="box-none"
      style={
        Object {
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      />
    </View>
  </RNCSafeAreaView>
</View>
`;
